<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<packaging>jar</packaging>
	<artifactId>fesen</artifactId>
	<parent>
		<groupId>org.codelibs.fesen</groupId>
		<artifactId>fesen-parent</artifactId>
		<version>0.15.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<properties>
		<!-- DEB & RPM build -->
		<packaging.fesen.home.dir>/usr/share/fesen</packaging.fesen.home.dir>
		<packaging.fesen.app.dir>${packaging.fesen.home.dir}/app</packaging.fesen.app.dir>
		<packaging.fesen.bin.dir>${packaging.fesen.home.dir}/bin</packaging.fesen.bin.dir>
		<packaging.fesen.conf.dir>/etc/fse</packaging.fesen.conf.dir>
		<packaging.fesen.var.dir>/var/lib/fesen</packaging.fesen.var.dir>
		<packaging.fesen.lib.dir>${packaging.fesen.home.dir}/lib</packaging.fesen.lib.dir>
		<packaging.fesen.log.dir>/var/log/fesen</packaging.fesen.log.dir>
		<packaging.fesen.temp.dir>/var/tmp/fesen</packaging.fesen.temp.dir>
		<packaging.fesen.extension.dir>${packaging.fesen.home.dir}/extension</packaging.fesen.extension.dir>
		<packaging.fesen.user>elasticsearch</packaging.fesen.user>
		<packaging.fesen.group>elasticsearch</packaging.fesen.group>
		<packaging.fesen.pid.dir>/var/run/fesen</packaging.fesen.pid.dir>
		<packaging.fesen.systemd.dir>/usr/lib/systemd/system</packaging.fesen.systemd.dir>
		<packaging.fesen.systemd.sysctl.dir>/usr/lib/sysctl.d</packaging.fesen.systemd.sysctl.dir>
		<packaging.fesen.tmpfilesd.dir>/usr/lib/tmpfiles.d</packaging.fesen.tmpfilesd.dir>
	</properties>
	<build>
		<finalName>fesen</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<filters>
			<filter>src/packaging/common/packaging.properties</filter>
		</filters>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>source-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>3.0.0</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant</artifactId>
						<version>1.9.15</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<ant antfile="${basedir}/plugin.xml" target="install.all">
									<property name="plubin.version" value="${project.version}" />
								</ant>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>copy-resources-deb</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/generated-packaging/deb/</outputDirectory>
							<filters>
								<filter>${project.basedir}/src/packaging/common/packaging.properties</filter>
								<filter>${project.basedir}/src/packaging/deb/packaging.properties</filter>
							</filters>
							<resources>
								<resource>
									<directory>src/packaging/common/</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*</include>
									</includes>
									<excludes>
										<exclude>packaging.properties</exclude>
									</excludes>
								</resource>
								<resource>
									<directory>src/packaging/deb/</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*</include>
									</includes>
									<excludes>
										<exclude>packaging.properties</exclude>
									</excludes>
								</resource>
								<resource>
									<directory>${project.basedir}</directory>
									<filtering>true</filtering>
									<includes>
										<include>bin/fesen</include>
										<include>bin/fesen-cli</include>
										<include>bin/fesen-env</include>
										<include>bin/fesen-env-from-file</include>
										<include>bin/fesen-keystore</include>
										<include>bin/fesen-node</include>
										<include>bin/fesen-plugin</include>
										<include>bin/fesen-shard</include>
										<include>bin/fesen.bat</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-rpm</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/generated-packaging/rpm/</outputDirectory>
							<filters>
								<filter>${project.basedir}/src/packaging/common/packaging.properties</filter>
								<filter>${project.basedir}/src/packaging/rpm/packaging.properties</filter>
							</filters>
							<resources>
								<resource>
									<directory>src/packaging/common/</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*</include>
									</includes>
									<excludes>
										<exclude>packaging.properties</exclude>
									</excludes>
								</resource>
								<resource>
									<directory>src/packaging/rpm/</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*</include>
									</includes>
									<excludes>
										<exclude>packaging.properties</exclude>
									</excludes>
								</resource>
								<resource>
									<directory>${project.basedir}</directory>
									<filtering>true</filtering>
									<includes>
										<include>bin/fesen</include>
										<include>bin/fesen-cli</include>
										<include>bin/fesen-env</include>
										<include>bin/fesen-env-from-file</include>
										<include>bin/fesen-keystore</include>
										<include>bin/fesen-node</include>
										<include>bin/fesen-plugin</include>
										<include>bin/fesen-shard</include>
										<include>bin/fesen.bat</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<finalName>${project.artifactId}-${project.version}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<outputDirectory>${project.build.directory}/releases/</outputDirectory>
					<tarLongFileMode>gnu</tarLongFileMode>
					<descriptors>
						<descriptor>${basedir}/src/main/assemblies/zip-bin.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.vafer</groupId>
				<artifactId>jdeb</artifactId>
				<version>1.8</version>
				<configuration>
					<deb>${project.build.directory}/releases/${project.artifactId}-${project.version}.deb</deb>
					<controlDir>${project.build.directory}/generated-packaging/deb/scripts</controlDir>
					<dataSet>
						<data>
							<type>directory</type>
							<src>${project.build.directory}/fesen</src>
							<excludes>**/fesen_config.properties,**/fesen_env*.properties,**/tika.xml</excludes>
							<mapper>
								<type>perm</type>
								<prefix>${packaging.fesen.app.dir}</prefix>
								<filemode>755</filemode>
								<user>${packaging.fesen.user}</user>
								<group>${packaging.fesen.group}</group>
							</mapper>
						</data>
						<data>
							<type>directory</type>
							<src>${project.build.directory}/tomcat-lib</src>
							<mapper>
								<type>perm</type>
								<prefix>${packaging.fesen.lib.dir}/classes</prefix>
								<user>${packaging.fesen.user}</user>
								<group>${packaging.fesen.group}</group>
							</mapper>
						</data>
						<data>
							<type>file</type>
							<src>${project.build.directory}/fesen/WEB-INF/classes/org/codelibs/fesen/FessBoot.class</src>
							<dst>${packaging.fesen.lib.dir}/classes/org/codelibs/fesen/FessBoot.class</dst>
							<mapper>
								<type>perm</type>
								<user>${packaging.fesen.user}</user>
								<group>${packaging.fesen.group}</group>
							</mapper>
						</data>
						<data>
							<type>directory</type>
							<src>${project.build.directory}/fesen/WEB-INF/classes/org/codelibs/fesen/tomcat</src>
							<mapper>
								<type>perm</type>
								<prefix>${packaging.fesen.lib.dir}/classes/org/codelibs/fesen/tomcat</prefix>
								<user>${packaging.fesen.user}</user>
								<group>${packaging.fesen.group}</group>
							</mapper>
						</data>
						<!-- Add configuration files -->
						<data>
							<type>files</type>
							<paths>
								<path>${project.basedir}/src/main/assemblies/files/tomcat_config.properties</path>
								<path>${project.basedir}/src/main/assemblies/files/logging.properties</path>
							</paths>
							<dst>${packaging.fesen.conf.dir}</dst>
							<mapper>
								<type>perm</type>
								<user>${packaging.fesen.user}</user>
								<group>${packaging.fesen.group}</group>
							</mapper>
						</data>
						<data>
							<type>files</type>
							<paths>
								<path>${project.build.directory}/fesen/WEB-INF/classes/fesen_config.properties</path>
								<path>${project.build.directory}/fesen/WEB-INF/classes/fesen_env_crawler.properties</path>
								<path>${project.build.directory}/fesen/WEB-INF/classes/fesen_env_suggest.properties</path>
								<path>${project.build.directory}/fesen/WEB-INF/classes/fesen_env_thumbnail.properties</path>
								<path>${project.build.directory}/fesen/WEB-INF/classes/fesen_env_web.properties</path>
								<path>${project.build.directory}/fesen/WEB-INF/classes/tika.xml</path>
							</paths>
							<dst>${packaging.fesen.conf.dir}</dst>
							<mapper>
								<type>perm</type>
								<user>${packaging.fesen.user}</user>
								<group>${packaging.fesen.group}</group>
							</mapper>
						</data>
						<!-- Add extensions -->
						<data>
							<type>directory</type>
							<src>${project.basedir}/src/main/assemblies/extension</src>
							<mapper>
								<type>perm</type>
								<prefix>${packaging.fesen.extension.dir}</prefix>
								<user>${packaging.fesen.user}</user>
								<group>${packaging.fesen.group}</group>
							</mapper>
						</data>
						<!-- Add var directory -->
						<data>
							<type>template</type>
							<paths>
								<path>${packaging.fesen.var.dir}</path>
							</paths>
							<mapper>
								<type>perm</type>
								<dirmode>755</dirmode>
								<user>${packaging.fesen.user}</user>
								<group>${packaging.fesen.group}</group>
							</mapper>
						</data>
						<!-- Add bin directory -->
						<data>
							<type>files</type>
							<paths>
								<path>${project.basedir}/src/main/assemblies/files/fesen</path>
								<path>${project.basedir}/src/main/assemblies/files/fesen.in.sh</path>
								<path>${project.basedir}/src/main/assemblies/files/generate-thumbnail</path>
								<path>${project.basedir}/plugin.xml</path>
							</paths>
							<dst>${packaging.fesen.bin.dir}</dst>
							<mapper>
								<type>perm</type>
								<filemode>755</filemode>
								<user>${packaging.fesen.user}</user>
								<group>${packaging.fesen.group}</group>
							</mapper>
						</data>
						<!-- Add log and temp directories -->
						<data>
							<type>template</type>
							<paths>
								<path>${packaging.fesen.log.dir}</path>
								<path>${packaging.fesen.temp.dir}</path>
							</paths>
							<mapper>
								<type>perm</type>
								<user>${packaging.fesen.user}</user>
								<group>${packaging.fesen.group}</group>
							</mapper>
						</data>
						<!-- Add dictionary directory -->
						<data>
							<type>template</type>
							<paths>
								<path>${packaging.fesen.dictionary.dir}</path>
							</paths>
							<mapper>
								<type>perm</type>
								<user>elasticsearch</user>
								<group>elasticsearch</group>
							</mapper>
						</data>
						<!-- Add elasicsearch plugins directory -->
						<data>
							<type>directory</type>
							<src>${project.basedir}/plugins</src>
							<mapper>
								<type>perm</type>
								<prefix>${packaging.fesen.home.dir}/es/plugins</prefix>
								<user>${packaging.fesen.user}</user>
								<group>${packaging.fesen.group}</group>
							</mapper>
						</data>
						<!-- Add environment vars file -->
						<data>
							<type>file</type>
							<src>${project.build.directory}/generated-packaging/deb/env/fesen</src>
							<dst>/etc/default/fesen</dst>
							<mapper>
								<type>perm</type>
								<user>root</user>
								<group>root</group>
							</mapper>
						</data>
						<!-- Add init.d files -->
						<data>
							<type>file</type>
							<src>${project.build.directory}/generated-packaging/deb/init.d/fesen</src>
							<dst>/etc/init.d/fesen</dst>
							<mapper>
								<type>perm</type>
								<filemode>755</filemode>
								<user>root</user>
								<group>root</group>
							</mapper>
						</data>
						<!-- Adds systemd file -->
						<data>
							<type>file</type>
							<src>${project.build.directory}/generated-packaging/deb/systemd/fesen.service</src>
							<dst>${packaging.fesen.systemd.dir}/fesen.service</dst>
						</data>
						<!-- Adds systemd/sysctl.d configuration file -->
						<data>
							<type>file</type>
							<src>${project.build.directory}/generated-packaging/deb/systemd/sysctl/fesen.conf</src>
							<dst>${packaging.fesen.systemd.sysctl.dir}/fesen.conf</dst>
						</data>
						<!-- Adds systemd/tmpfiles.d configuration file -->
						<data>
							<type>file</type>
							<src>${project.build.directory}/generated-packaging/deb/systemd/fesen.conf</src>
							<dst>${packaging.fesen.tmpfilesd.dir}/fesen.conf</dst>
						</data>
						<!-- Add lintian files -->
						<data>
							<type>directory</type>
							<src>${project.build.directory}/generated-packaging/deb/lintian</src>
							<excludes>.DS_Store</excludes>
							<mapper>
								<type>perm</type>
								<prefix>/usr/share/lintian/overrides</prefix>
								<user>${packaging.fesen.user}</user>
								<group>${packaging.fesen.group}</group>
							</mapper>
						</data>
						<!-- Add readme files -->
						<data>
							<type>files</type>
							<paths>
								<path>${project.basedir}/LICENSE</path>
								<path>${project.basedir}/README.md</path>
							</paths>
							<dst>${packaging.fesen.home.dir}</dst>
							<mapper>
								<type>perm</type>
								<user>${packaging.fesen.user}</user>
								<group>${packaging.fesen.group}</group>
							</mapper>
						</data>
						<!-- Add license files -->
						<data>
							<type>file</type>
							<src>${project.build.directory}/generated-packaging/deb/copyright</src>
							<dst>/usr/share/doc/fesen/copyright</dst>
						</data>
						<!-- Adds and sets permission on default directories -->
						<data>
							<type>template</type>
							<paths>
								<path>${packaging.fesen.pid.dir}</path>
							</paths>
							<mapper>
								<type>perm</type>
								<user>${packaging.fesen.user}</user>
								<group>${packaging.fesen.group}</group>
							</mapper>
						</data>
					</dataSet>
				</configuration>
			</plugin>
			<!-- rpm -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>rpm-maven-plugin</artifactId>
				<version>2.2.0</version>
				<configuration>
					<distribution>Fess</distribution>
					<group>Application/Internet</group>
					<packager>CodeLibs</packager>
					<prefix>/usr</prefix>
					<needarch>noarch</needarch>
					<targetOS>linux</targetOS>
					<changelogFile>src/changelog</changelogFile>
					<defineStatements>
						<defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
						<defineStatement>_binaries_in_noarch_packages_terminate_build 0</defineStatement>
					</defineStatements>
					<defaultFilemode>644</defaultFilemode>
					<defaultDirmode>755</defaultDirmode>
					<defaultUsername>${packaging.fesen.user}</defaultUsername>
					<defaultGroupname>${packaging.fesen.group}</defaultGroupname>
					<!-- <keyname>${gpg.key}</keyname> <keypath>${gpg.keyring}</keypath> 
						<keyPassphrase> <passphrase>${gpg.passphrase}</passphrase> </keyPassphrase> -->
					<mappings>
						<!-- app -->
						<mapping>
							<directory>${packaging.fesen.app.dir}</directory>
							<filemode>755</filemode>
							<sources>
								<source>
									<location>${project.build.directory}/fesen</location>
									<excludes>
										<exclude>**/fesen_config.properties</exclude>
										<exclude>**/fesen_env*.properties</exclude>
										<exclude>**/tika.xml</exclude>
									</excludes>
								</source>
							</sources>
						</mapping>
						<!-- lib -->
						<mapping>
							<directory>${packaging.fesen.lib.dir}/classes</directory>
							<sources>
								<source>
									<location>${project.build.directory}/tomcat-lib</location>
								</source>
							</sources>
						</mapping>
						<mapping>
							<directory>${packaging.fesen.lib.dir}/classes/org/codelibs/fesen</directory>
							<sources>
								<source>
									<location>${project.build.directory}/fesen/WEB-INF/classes/org/codelibs/fesen</location>
									<includes>
										<include>FessBoot**</include>
										<include>tomcat/**</include>
									</includes>
								</source>
							</sources>
						</mapping>
						<mapping>
							<directory>${packaging.fesen.conf.dir}</directory>
							<configuration>noreplace</configuration>
							<sources>
								<source>
									<location>${project.basedir}/src/main/assemblies/files</location>
									<includes>
										<include>logging.properties</include>
										<include>tomcat_config.properties</include>
									</includes>
								</source>
								<source>
									<location>${project.build.directory}/fesen/WEB-INF/classes</location>
									<includes>
										<include>fesen_config.properties</include>
										<include>fesen_env_crawler.properties</include>
										<include>fesen_env_suggest.properties</include>
										<include>fesen_env_thumbnail.properties</include>
										<include>fesen_env_web.properties</include>
										<include>tika.xml</include>
									</includes>
								</source>
							</sources>
						</mapping>
						<mapping>
							<directory>${packaging.fesen.extension.dir}</directory>
							<sources>
								<source>
									<location>${project.basedir}/src/main/assemblies/extension</location>
								</source>
							</sources>
						</mapping>
						<mapping>
							<directory>${packaging.fesen.var.dir}</directory>
							<filemode>755</filemode>
							<username>${packaging.fesen.user}</username>
							<groupname>${packaging.fesen.group}</groupname>
						</mapping>
						<!-- bin -->
						<mapping>
							<directory>${packaging.fesen.bin.dir}</directory>
							<filemode>755</filemode>
							<sources>
								<source>
									<location>${project.basedir}/src/main/assemblies/files</location>
									<includes>
										<include>fesen</include>
										<include>fesen.in.sh</include>
										<include>generate-thumbnail</include>
									</includes>
								</source>
							</sources>
						</mapping>
						<mapping>
							<directory>${packaging.fesen.bin.dir}</directory>
							<filemode>644</filemode>
							<sources>
								<source>
									<location>${project.basedir}</location>
									<includes>
										<include>plugin.xml</include>
									</includes>
								</source>
							</sources>
						</mapping>
						<!-- logs (empty) -->
						<mapping>
							<directory>${packaging.fesen.log.dir}</directory>
						</mapping>
						<!-- temp (empty) -->
						<mapping>
							<directory>${packaging.fesen.temp.dir}</directory>
						</mapping>
						<!-- dictionary (empty) -->
						<mapping>
							<directory>${packaging.fesen.dictionary.dir}</directory>
							<filemode>755</filemode>
							<username>elasticsearch</username>
							<groupname>elasticsearch</groupname>
						</mapping>
						<!-- es/plugins -->
						<mapping>
							<directory>${packaging.fesen.home.dir}/es/plugins</directory>
							<sources>
								<source>
									<location>${project.basedir}/plugins</location>
								</source>
							</sources>
						</mapping>
						<!-- Add environment vars file -->
						<mapping>
							<directory>/etc/sysconfig</directory>
							<directoryIncluded>false</directoryIncluded>
							<username>root</username>
							<groupname>root</groupname>
							<configuration>noreplace</configuration>
							<sources>
								<source>
									<location>${project.build.directory}/generated-packaging/rpm/env/</location>
									<includes>
										<include>fesen</include>
									</includes>
								</source>
							</sources>
						</mapping>
						<!-- Add init.d files -->
						<mapping>
							<directory>/etc/init.d</directory>
							<directoryIncluded>false</directoryIncluded>
							<filemode>755</filemode>
							<username>root</username>
							<groupname>root</groupname>
							<configuration>true</configuration>
							<sources>
								<source>
									<location>${project.build.directory}/generated-packaging/rpm/init.d</location>
									<includes>
										<include>fesen</include>
									</includes>
								</source>
							</sources>
						</mapping>
						<!-- Adds systemd file -->
						<mapping>
							<directory>${packaging.fesen.systemd.dir}</directory>
							<directoryIncluded>false</directoryIncluded>
							<username>root</username>
							<groupname>root</groupname>
							<configuration>true</configuration>
							<sources>
								<source>
									<location>${project.build.directory}/generated-packaging/rpm/systemd</location>
									<includes>
										<include>fesen.service</include>
									</includes>
								</source>
							</sources>
						</mapping>
						<!-- Adds systemd/sysctl.d configuration file -->
						<mapping>
							<directory>${packaging.fesen.systemd.sysctl.dir}</directory>
							<directoryIncluded>false</directoryIncluded>
							<username>root</username>
							<groupname>root</groupname>
							<configuration>true</configuration>
							<sources>
								<source>
									<location>${project.build.directory}/generated-packaging/rpm/systemd/sysctl</location>
									<includes>
										<include>fesen.conf</include>
									</includes>
								</source>
							</sources>
						</mapping>
						<!-- Adds systemd/tmpfiles.d configuration file -->
						<mapping>
							<directory>${packaging.fesen.tmpfilesd.dir}</directory>
							<directoryIncluded>false</directoryIncluded>
							<username>root</username>
							<groupname>root</groupname>
							<configuration>true</configuration>
							<sources>
								<source>
									<location>${project.build.directory}/generated-packaging/rpm/systemd/</location>
									<includes>
										<include>fesen.conf</include>
									</includes>
								</source>
							</sources>
						</mapping>
						<!-- Add readme files -->
						<mapping>
							<directory>${packaging.fesen.home.dir}</directory>
							<sources>
								<source>
									<location>.</location>
									<includes>
										<include>LICENSE</include>
										<include>README.md</include>
									</includes>
								</source>
							</sources>
						</mapping>
						<!-- Add and sets permission on default directories -->
						<mapping>
							<directory>${packaging.fesen.pid.dir}</directory>
							<filemode>755</filemode>
							<username>${packaging.fesen.user}</username>
							<groupname>${packaging.fesen.group}</groupname>
						</mapping>
					</mappings>
					<preinstallScriptlet>
						<scriptFile>${project.build.directory}/generated-packaging/rpm/scripts/preinst</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</preinstallScriptlet>
					<postinstallScriptlet>
						<scriptFile>${project.build.directory}/generated-packaging/rpm/scripts/postinst</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</postinstallScriptlet>
					<preremoveScriptlet>
						<scriptFile>${project.build.directory}/generated-packaging/rpm/scripts/prerm</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</preremoveScriptlet>
					<postremoveScriptlet>
						<scriptFile>${project.build.directory}/generated-packaging/rpm/scripts/postrm</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</postremoveScriptlet>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.codelibs.fesen.lib</groupId>
			<artifactId>fesen-cli</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codelibs.fesen.lib</groupId>
			<artifactId>fesen-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codelibs.fesen.lib</groupId>
			<artifactId>fesen-geometry</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codelibs.fesen.lib</groupId>
			<artifactId>fesen-plugin-classloader</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codelibs.fesen.lib</groupId>
			<artifactId>fesen-secure-sm</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codelibs.fesen.lib</groupId>
			<artifactId>fesen-x-content</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codelibs.fesen.tool</groupId>
			<artifactId>fesen-java-version-checker</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codelibs.fesen.tool</groupId>
			<artifactId>fesen-keystore-cli</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codelibs.fesen.tool</groupId>
			<artifactId>fesen-launchers</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codelibs.fesen.tool</groupId>
			<artifactId>fesen-plugin-cli</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codelibs.fesen</groupId>
			<artifactId>fesen-engine-server</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>
</project>
